{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = require(\"react\");\n\nfunction useMediaQuery(query) {\n  const [matches, setMatches] = react_1.useState(false);\n  react_1.useEffect(() => {\n    if (window.matchMedia) {\n      const media = window.matchMedia(query);\n\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n\n      const listener = () => {\n        setMatches(media.matches);\n      };\n\n      media.addListener(listener);\n      return () => media.removeListener(listener);\n    }\n  }, [matches, query]);\n  return matches;\n}\n\nexports.default = useMediaQuery;","map":{"version":3,"sources":["../../src/hooks/useMediaQuery.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,SAAwB,aAAxB,CAAsC,KAAtC,EAAmD;AACjD,QAAM,CAAC,OAAD,EAAU,UAAV,IAAwB,OAAA,CAAA,QAAA,CAAkB,KAAlB,CAA9B;AAEA,EAAA,OAAA,CAAA,SAAA,CAAU,MAAK;AACb,QAAI,MAAM,CAAC,UAAX,EAAuB;AACrB,YAAM,KAAK,GAAG,MAAM,CAAC,UAAP,CAAkB,KAAlB,CAAd;;AACA,UAAI,KAAK,CAAC,OAAN,KAAkB,OAAtB,EAA+B;AAC7B,QAAA,UAAU,CAAC,KAAK,CAAC,OAAP,CAAV;AACD;;AACD,YAAM,QAAQ,GAAG,MAAK;AACpB,QAAA,UAAU,CAAC,KAAK,CAAC,OAAP,CAAV;AACD,OAFD;;AAGA,MAAA,KAAK,CAAC,WAAN,CAAkB,QAAlB;AACA,aAAO,MAAM,KAAK,CAAC,cAAN,CAAqB,QAArB,CAAb;AACD;AACF,GAZD,EAYG,CAAC,OAAD,EAAU,KAAV,CAZH;AAcA,SAAO,OAAP;AACD;;AAlBD,OAAA,CAAA,OAAA,GAAA,aAAA","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nfunction useMediaQuery(query) {\n    const [matches, setMatches] = react_1.useState(false);\n    react_1.useEffect(() => {\n        if (window.matchMedia) {\n            const media = window.matchMedia(query);\n            if (media.matches !== matches) {\n                setMatches(media.matches);\n            }\n            const listener = () => {\n                setMatches(media.matches);\n            };\n            media.addListener(listener);\n            return () => media.removeListener(listener);\n        }\n    }, [matches, query]);\n    return matches;\n}\nexports.default = useMediaQuery;\n"]},"metadata":{},"sourceType":"script"}