{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst uploadPlaceholder_1 = __importStar(require(\"../lib/uploadPlaceholder\"));\n\nconst types_1 = require(\"../types\");\n\nconst prosemirror_state_1 = require(\"prosemirror-state\");\n\nlet uploadId = 0;\n\nconst insertFiles = function (view, event, pos, files, options) {\n  const images = files.filter(file => /image/i.test(file.type));\n  if (images.length === 0) return;\n  const {\n    dictionary,\n    uploadImage,\n    onImageUploadStart,\n    onImageUploadStop,\n    onShowToast\n  } = options;\n\n  if (!uploadImage) {\n    console.warn(\"uploadImage callback must be defined to handle image uploads.\");\n    return;\n  }\n\n  event.preventDefault();\n  if (onImageUploadStart) onImageUploadStart();\n  const {\n    schema\n  } = view.state;\n  let complete = 0;\n\n  for (const file of images) {\n    const id = `upload-${uploadId++}`;\n    const {\n      tr\n    } = view.state;\n    tr.setMeta(uploadPlaceholder_1.default, {\n      add: {\n        id,\n        file,\n        pos,\n        replaceExisting: options.replaceExisting\n      }\n    });\n    view.dispatch(tr);\n    uploadImage(file).then(src => {\n      const newImg = new Image();\n\n      newImg.onload = () => {\n        const result = uploadPlaceholder_1.findPlaceholder(view.state, id);\n\n        if (result === null) {\n          return;\n        }\n\n        const [from, to] = result;\n        view.dispatch(view.state.tr.replaceWith(from, to || from, schema.nodes.image.create({\n          src\n        })).setMeta(uploadPlaceholder_1.default, {\n          remove: {\n            id\n          }\n        }));\n\n        if (view.state.selection.from === from) {\n          view.dispatch(view.state.tr.setSelection(new prosemirror_state_1.NodeSelection(view.state.doc.resolve(from))));\n        }\n      };\n\n      newImg.onerror = error => {\n        throw error;\n      };\n\n      newImg.src = src;\n    }).catch(error => {\n      console.error(error);\n      const transaction = view.state.tr.setMeta(uploadPlaceholder_1.default, {\n        remove: {\n          id\n        }\n      });\n      view.dispatch(transaction);\n\n      if (onShowToast) {\n        onShowToast(dictionary.imageUploadError, types_1.ToastType.Error);\n      }\n    }).finally(() => {\n      complete++;\n\n      if (complete === images.length && onImageUploadStop) {\n        onImageUploadStop();\n      }\n    });\n  }\n};\n\nexports.default = insertFiles;","map":{"version":3,"sources":["../../src/commands/insertFiles.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uploadPlaceholder_1 = __importStar(require(\"../lib/uploadPlaceholder\"));\nconst types_1 = require(\"../types\");\nconst prosemirror_state_1 = require(\"prosemirror-state\");\nlet uploadId = 0;\nconst insertFiles = function (view, event, pos, files, options) {\n    const images = files.filter(file => /image/i.test(file.type));\n    if (images.length === 0)\n        return;\n    const { dictionary, uploadImage, onImageUploadStart, onImageUploadStop, onShowToast, } = options;\n    if (!uploadImage) {\n        console.warn(\"uploadImage callback must be defined to handle image uploads.\");\n        return;\n    }\n    event.preventDefault();\n    if (onImageUploadStart)\n        onImageUploadStart();\n    const { schema } = view.state;\n    let complete = 0;\n    for (const file of images) {\n        const id = `upload-${uploadId++}`;\n        const { tr } = view.state;\n        tr.setMeta(uploadPlaceholder_1.default, {\n            add: {\n                id,\n                file,\n                pos,\n                replaceExisting: options.replaceExisting,\n            },\n        });\n        view.dispatch(tr);\n        uploadImage(file)\n            .then(src => {\n            const newImg = new Image();\n            newImg.onload = () => {\n                const result = uploadPlaceholder_1.findPlaceholder(view.state, id);\n                if (result === null) {\n                    return;\n                }\n                const [from, to] = result;\n                view.dispatch(view.state.tr\n                    .replaceWith(from, to || from, schema.nodes.image.create({ src }))\n                    .setMeta(uploadPlaceholder_1.default, { remove: { id } }));\n                if (view.state.selection.from === from) {\n                    view.dispatch(view.state.tr.setSelection(new prosemirror_state_1.NodeSelection(view.state.doc.resolve(from))));\n                }\n            };\n            newImg.onerror = error => {\n                throw error;\n            };\n            newImg.src = src;\n        })\n            .catch(error => {\n            console.error(error);\n            const transaction = view.state.tr.setMeta(uploadPlaceholder_1.default, {\n                remove: { id },\n            });\n            view.dispatch(transaction);\n            if (onShowToast) {\n                onShowToast(dictionary.imageUploadError, types_1.ToastType.Error);\n            }\n        })\n            .finally(() => {\n            complete++;\n            if (complete === images.length && onImageUploadStop) {\n                onImageUploadStop();\n            }\n        });\n    }\n};\nexports.default = insertFiles;\n"]},"metadata":{},"sourceType":"script"}