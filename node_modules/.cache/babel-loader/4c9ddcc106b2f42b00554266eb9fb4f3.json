{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst prosemirror_utils_1 = require(\"prosemirror-utils\");\n\nconst isNodeActive = function (type) {\n  let attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return state => {\n    if (!type) {\n      return false;\n    }\n\n    const node = prosemirror_utils_1.findSelectedNodeOfType(type)(state.selection) || prosemirror_utils_1.findParentNode(node => node.type === type)(state.selection);\n\n    if (!Object.keys(attrs).length || !node) {\n      return !!node;\n    }\n\n    return node.node.hasMarkup(type, Object.assign(Object.assign({}, node.node.attrs), attrs));\n  };\n};\n\nexports.default = isNodeActive;","map":{"version":3,"sources":["../../src/queries/isNodeActive.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,mBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAEA,MAAM,YAAY,GAAG,UAAC,IAAD;AAAA,MAAO,KAAP,uEAAoC,EAApC;AAAA,SAA2C,KAAK,IAAG;AACtE,QAAI,CAAC,IAAL,EAAW;AACT,aAAO,KAAP;AACD;;AAED,UAAM,IAAI,GACR,mBAAA,CAAA,sBAAA,CAAuB,IAAvB,EAA6B,KAAK,CAAC,SAAnC,KACA,mBAAA,CAAA,cAAA,CAAe,IAAI,IAAI,IAAI,CAAC,IAAL,KAAc,IAArC,EAA2C,KAAK,CAAC,SAAjD,CAFF;;AAIA,QAAI,CAAC,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,MAApB,IAA8B,CAAC,IAAnC,EAAyC;AACvC,aAAO,CAAC,CAAC,IAAT;AACD;;AAED,WAAO,IAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,IAApB,EAAwB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,IAAI,CAAC,IAAL,CAAU,KAAjB,CAAA,EAA2B,KAA3B,CAAxB,CAAP;AACD,GAdoB;AAAA,CAArB;;AAgBA,OAAA,CAAA,OAAA,GAAe,YAAf","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst prosemirror_utils_1 = require(\"prosemirror-utils\");\nconst isNodeActive = (type, attrs = {}) => state => {\n    if (!type) {\n        return false;\n    }\n    const node = prosemirror_utils_1.findSelectedNodeOfType(type)(state.selection) ||\n        prosemirror_utils_1.findParentNode(node => node.type === type)(state.selection);\n    if (!Object.keys(attrs).length || !node) {\n        return !!node;\n    }\n    return node.node.hasMarkup(type, Object.assign(Object.assign({}, node.node.attrs), attrs));\n};\nexports.default = isNodeActive;\n"]},"metadata":{},"sourceType":"script"}