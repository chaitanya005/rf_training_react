{"ast":null,"code":"'use strict';\n\nvar emoji_html = require('./lib/render');\n\nvar emoji_replace = require('./lib/replace');\n\nvar normalize_opts = require('./lib/normalize_opts');\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: {},\n    shortcuts: {},\n    enabled: []\n  };\n  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n  md.renderer.rules.emoji = emoji_html;\n  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));\n};","map":{"version":3,"sources":["/home/krishnachaitanya/training/todo-react/todo-react/node_modules/markdown-it-emoji/bare.js"],"names":["emoji_html","require","emoji_replace","normalize_opts","module","exports","emoji_plugin","md","options","defaults","defs","shortcuts","enabled","opts","utils","assign","renderer","rules","emoji","core","ruler","push","scanRE","replaceRE"],"mappings":"AAAA;;AAGA,IAAIA,UAAU,GAAUC,OAAO,CAAC,cAAD,CAA/B;;AACA,IAAIC,aAAa,GAAOD,OAAO,CAAC,eAAD,CAA/B;;AACA,IAAIE,cAAc,GAAMF,OAAO,CAAC,sBAAD,CAA/B;;AAGAG,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,EAAtB,EAA0BC,OAA1B,EAAmC;AAClD,MAAIC,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE,EADO;AAEbC,IAAAA,SAAS,EAAE,EAFE;AAGbC,IAAAA,OAAO,EAAE;AAHI,GAAf;AAMA,MAAIC,IAAI,GAAGV,cAAc,CAACI,EAAE,CAACO,KAAH,CAASC,MAAT,CAAgB,EAAhB,EAAoBN,QAApB,EAA8BD,OAAO,IAAI,EAAzC,CAAD,CAAzB;AAEAD,EAAAA,EAAE,CAACS,QAAH,CAAYC,KAAZ,CAAkBC,KAAlB,GAA0BlB,UAA1B;AAEAO,EAAAA,EAAE,CAACY,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmB,OAAnB,EAA4BnB,aAAa,CAACK,EAAD,EAAKM,IAAI,CAACH,IAAV,EAAgBG,IAAI,CAACF,SAArB,EAAgCE,IAAI,CAACS,MAArC,EAA6CT,IAAI,CAACU,SAAlD,CAAzC;AACD,CAZD","sourcesContent":["'use strict';\n\n\nvar emoji_html        = require('./lib/render');\nvar emoji_replace     = require('./lib/replace');\nvar normalize_opts    = require('./lib/normalize_opts');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: {},\n    shortcuts: {},\n    enabled: []\n  };\n\n  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n\n  md.renderer.rules.emoji = emoji_html;\n\n  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));\n};\n"]},"metadata":{},"sourceType":"script"}