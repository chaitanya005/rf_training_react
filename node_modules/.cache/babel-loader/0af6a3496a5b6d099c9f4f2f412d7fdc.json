{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst prosemirror_commands_1 = require(\"prosemirror-commands\");\n\nconst markInputRule_1 = __importDefault(require(\"../lib/markInputRule\"));\n\nconst Mark_1 = __importDefault(require(\"./Mark\"));\n\nconst underlines_1 = __importDefault(require(\"../rules/underlines\"));\n\nclass Underline extends Mark_1.default {\n  get name() {\n    return \"underline\";\n  }\n\n  get schema() {\n    return {\n      parseDOM: [{\n        tag: \"u\"\n      }, {\n        style: \"text-decoration\",\n        getAttrs: value => value === \"underline\"\n      }],\n      toDOM: () => [\"u\", 0]\n    };\n  }\n\n  get rulePlugins() {\n    return [underlines_1.default];\n  }\n\n  inputRules(_ref) {\n    let {\n      type\n    } = _ref;\n    return [markInputRule_1.default(/(?:__)([^_]+)(?:__)$/, type)];\n  }\n\n  keys(_ref2) {\n    let {\n      type\n    } = _ref2;\n    return {\n      \"Mod-u\": prosemirror_commands_1.toggleMark(type)\n    };\n  }\n\n  get toMarkdown() {\n    return {\n      open: \"__\",\n      close: \"__\",\n      mixable: true,\n      expelEnclosingWhitespace: true\n    };\n  }\n\n  parseMarkdown() {\n    return {\n      mark: \"underline\"\n    };\n  }\n\n}\n\nexports.default = Underline;","map":{"version":3,"sources":["../../src/marks/Underline.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAA,sBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,MAAA,eAAA,GAAA,eAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AACA,MAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AACA,MAAA,YAAA,GAAA,eAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AAEA,MAAqB,SAArB,SAAuC,MAAA,CAAA,OAAvC,CAA2C;AACjC,MAAJ,IAAI,GAAA;AACN,WAAO,WAAP;AACD;;AAES,MAAN,MAAM,GAAA;AACR,WAAO;AACL,MAAA,QAAQ,EAAE,CACR;AAAE,QAAA,GAAG,EAAE;AAAP,OADQ,EAER;AACE,QAAA,KAAK,EAAE,iBADT;AAEE,QAAA,QAAQ,EAAE,KAAK,IAAI,KAAK,KAAK;AAF/B,OAFQ,CADL;AAQL,MAAA,KAAK,EAAE,MAAM,CAAC,GAAD,EAAM,CAAN;AARR,KAAP;AAUD;;AAEc,MAAX,WAAW,GAAA;AACb,WAAO,CAAC,YAAA,CAAA,OAAD,CAAP;AACD;;AAED,EAAA,UAAU,OAAS;AAAA,QAAR;AAAE,MAAA;AAAF,KAAQ;AACjB,WAAO,CAAC,eAAA,CAAA,OAAA,CAAc,sBAAd,EAAsC,IAAtC,CAAD,CAAP;AACD;;AAED,EAAA,IAAI,QAAS;AAAA,QAAR;AAAE,MAAA;AAAF,KAAQ;AACX,WAAO;AACL,eAAS,sBAAA,CAAA,UAAA,CAAW,IAAX;AADJ,KAAP;AAGD;;AAEa,MAAV,UAAU,GAAA;AACZ,WAAO;AACL,MAAA,IAAI,EAAE,IADD;AAEL,MAAA,KAAK,EAAE,IAFF;AAGL,MAAA,OAAO,EAAE,IAHJ;AAIL,MAAA,wBAAwB,EAAE;AAJrB,KAAP;AAMD;;AAED,EAAA,aAAa,GAAA;AACX,WAAO;AAAE,MAAA,IAAI,EAAE;AAAR,KAAP;AACD;;AA3CwC;;AAA3C,OAAA,CAAA,OAAA,GAAA,SAAA","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst prosemirror_commands_1 = require(\"prosemirror-commands\");\nconst markInputRule_1 = __importDefault(require(\"../lib/markInputRule\"));\nconst Mark_1 = __importDefault(require(\"./Mark\"));\nconst underlines_1 = __importDefault(require(\"../rules/underlines\"));\nclass Underline extends Mark_1.default {\n    get name() {\n        return \"underline\";\n    }\n    get schema() {\n        return {\n            parseDOM: [\n                { tag: \"u\" },\n                {\n                    style: \"text-decoration\",\n                    getAttrs: value => value === \"underline\",\n                },\n            ],\n            toDOM: () => [\"u\", 0],\n        };\n    }\n    get rulePlugins() {\n        return [underlines_1.default];\n    }\n    inputRules({ type }) {\n        return [markInputRule_1.default(/(?:__)([^_]+)(?:__)$/, type)];\n    }\n    keys({ type }) {\n        return {\n            \"Mod-u\": prosemirror_commands_1.toggleMark(type),\n        };\n    }\n    get toMarkdown() {\n        return {\n            open: \"__\",\n            close: \"__\",\n            mixable: true,\n            expelEnclosingWhitespace: true,\n        };\n    }\n    parseMarkdown() {\n        return { mark: \"underline\" };\n    }\n}\nexports.default = Underline;\n"]},"metadata":{},"sourceType":"script"}