{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = __importDefault(require(\"react\"));\n\nconst gemoji_1 = __importDefault(require(\"gemoji\"));\n\nconst fuzzy_search_1 = __importDefault(require(\"fuzzy-search\"));\n\nconst CommandMenu_1 = __importDefault(require(\"./CommandMenu\"));\n\nconst EmojiMenuItem_1 = __importDefault(require(\"./EmojiMenuItem\"));\n\nconst searcher = new fuzzy_search_1.default(gemoji_1.default, [\"names\"], {\n  caseSensitive: true,\n  sort: true\n});\n\nclass EmojiMenu extends react_1.default.Component {\n  constructor() {\n    super(...arguments);\n\n    this.clearSearch = () => {\n      var _a;\n\n      const {\n        state,\n        dispatch\n      } = this.props.view;\n      dispatch(state.tr.insertText(\"\", state.selection.$from.pos - ((_a = this.props.search) !== null && _a !== void 0 ? _a : \"\").length - 1, state.selection.to));\n    };\n  }\n\n  get items() {\n    const {\n      search = \"\"\n    } = this.props;\n    const n = search.toLowerCase();\n    const result = searcher.search(n).map(item => {\n      const description = item.description;\n      const name = item.names[0];\n      return Object.assign(Object.assign({}, item), {\n        name: \"emoji\",\n        title: name,\n        description,\n        attrs: {\n          markup: name,\n          \"data-name\": name\n        }\n      });\n    });\n    return result.slice(0, 10);\n  }\n\n  render() {\n    return react_1.default.createElement(CommandMenu_1.default, Object.assign({}, this.props, {\n      id: \"emoji-menu-container\",\n      filterable: false,\n      onClearSearch: this.clearSearch,\n      renderMenuItem: (item, _index, options) => {\n        return react_1.default.createElement(EmojiMenuItem_1.default, {\n          onClick: options.onClick,\n          selected: options.selected,\n          title: item.description,\n          emoji: item.emoji,\n          containerId: \"emoji-menu-container\"\n        });\n      },\n      items: this.items\n    }));\n  }\n\n}\n\nexports.default = EmojiMenu;","map":{"version":3,"sources":["../../src/components/EmojiMenu.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst gemoji_1 = __importDefault(require(\"gemoji\"));\nconst fuzzy_search_1 = __importDefault(require(\"fuzzy-search\"));\nconst CommandMenu_1 = __importDefault(require(\"./CommandMenu\"));\nconst EmojiMenuItem_1 = __importDefault(require(\"./EmojiMenuItem\"));\nconst searcher = new fuzzy_search_1.default(gemoji_1.default, [\"names\"], {\n    caseSensitive: true,\n    sort: true,\n});\nclass EmojiMenu extends react_1.default.Component {\n    constructor() {\n        super(...arguments);\n        this.clearSearch = () => {\n            var _a;\n            const { state, dispatch } = this.props.view;\n            dispatch(state.tr.insertText(\"\", state.selection.$from.pos - ((_a = this.props.search) !== null && _a !== void 0 ? _a : \"\").length - 1, state.selection.to));\n        };\n    }\n    get items() {\n        const { search = \"\" } = this.props;\n        const n = search.toLowerCase();\n        const result = searcher.search(n).map(item => {\n            const description = item.description;\n            const name = item.names[0];\n            return Object.assign(Object.assign({}, item), { name: \"emoji\", title: name, description, attrs: { markup: name, \"data-name\": name } });\n        });\n        return result.slice(0, 10);\n    }\n    render() {\n        return (react_1.default.createElement(CommandMenu_1.default, Object.assign({}, this.props, { id: \"emoji-menu-container\", filterable: false, onClearSearch: this.clearSearch, renderMenuItem: (item, _index, options) => {\n                return (react_1.default.createElement(EmojiMenuItem_1.default, { onClick: options.onClick, selected: options.selected, title: item.description, emoji: item.emoji, containerId: \"emoji-menu-container\" }));\n            }, items: this.items })));\n    }\n}\nexports.default = EmojiMenu;\n"]},"metadata":{},"sourceType":"script"}